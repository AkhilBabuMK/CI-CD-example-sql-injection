name: Security Scan CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:  # Allow manual trigger


permissions:
  contents: read
  issues: write    # Grant permission to create issues
  pull-requests: write # Grant permission to comment on PRs

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper code diff analysis

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install semgrep requests flask fs

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          since_last_remote_commit: true

      - name: Run security scan
        id: security-scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_NAME: ${{ github.repository }}
          ML_ENABLED: ${{ secrets.ML_ENABLED || 'false' }}
        run: |
          python .github/scripts/security_scan.py

      - name: Upload scan results
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: security-report.json

      - name: Add PR Comment with Results
        if: github.event_name == 'pull_request' && steps.security-scan.outputs.has_issues == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const report = JSON.parse(fs.readFileSync('security-report.json', 'utf8'));

            const body = `## ðŸ”’ Security Scan Results

            ${report.summary}

            ${report.findings.length > 0 ? '### Vulnerabilities Found\n\n' +
              report.findings.map(v =>
                `- **${v.severity}**: ${v.title} in \`${v.file_path}\` at line ${v.line_number}\n  ${v.description}`
              ).join('\n\n') : ''}

            [View detailed report](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

      - name: Create Issue for Security Vulnerabilities
        if: steps.security-scan.outputs.has_issues == 'true' && github.event_name != 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const report = JSON.parse(fs.readFileSync('security-report.json', 'utf8'));

            const body = `## ðŸš¨ Security Vulnerabilities Detected

            ${report.summary}

            ${report.findings.length > 0 ? '### Vulnerabilities Found\n\n' +
              report.findings.map(v =>
                `- **${v.severity}**: ${v.title} in \`${v.file_path}\` at line ${v.line_number}\n  ${v.description}`
              ).join('\n\n') : ''}

            [View detailed report](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})`;

            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸ”’ Security Vulnerabilities Detected in Latest Commit',
              body: body,
              labels: ['security', 'vulnerability']
            });
